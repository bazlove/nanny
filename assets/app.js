// Console banner
(function(){try{console.log('%cLanding (split files)','background:#16324a;color:#fff;padding:2px 8px;border-radius:6px')}catch(e){}})();

// Burger (mobile)
(function(){
  const b=document.querySelector('.burger'); const head=document.querySelector('.site-header'); const mnav=document.getElementById('mnav');
  if(!b||!head||!mnav) return;
  b.addEventListener('click',()=>{ const open=head.classList.toggle('open'); b.setAttribute('aria-expanded', open?'true':'false'); mnav.hidden=!open; });
})();

// i18n (RU/SR)
(function(){
  const I18N = {
    ru: {
      nav_services:'–£—Å–ª—É–≥–∏', nav_slots:'–°–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã', nav_price:'–°—Ç–æ–∏–º–æ—Å—Ç—å', nav_faq:'–û—Ç–≤–µ—Ç—ã', nav_contact:'–ö–æ–Ω—Ç–∞–∫—Ç—ã',
      city:'–ù–æ–≤–∏-–°–∞–¥',
      hero_title:'–ù–∞–¥—ë–∂–Ω–∞—è –Ω—è–Ω—è –≤ –ù–æ–≤–∏-–°–∞–¥–µ ‚Äî —Å–ø–æ–∫–æ–π–Ω–æ —Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–∑ –¥–æ–º–∞',
      hero_sub:'CPR/First Aid, —Ñ–æ—Ç–æ-–æ—Ç—á—ë—Ç –ø–æ—Å–ª–µ –≤–∏–∑–∏—Ç–∞, —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∑–∞–Ω—è—Ç–∏—è, –º–æ—Ç–æ—Ä–∏–∫–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏.',
      trust_safe:'üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', trust_report:'üì∑ –§–æ—Ç–æ-–æ—Ç—á—ë—Ç', trust_no_screens:'üé≤ –†–∞–∑–≤–∏—Ç–∏–µ –±–µ–∑ —ç–∫—Ä–∞–Ω–æ–≤', trust_short_slots:'üïí –°–ª–æ—Ç—ã 2‚Äì4 —á–∞—Å–∞',
      btn_slots:'–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã',
      hero_micro:'–û–ø—ã—Ç: –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å –¥–µ—Ç—Å–∞–¥–∞ –∏ –¥–µ—Ç—Å–∫–∏–π —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä ‚Ä¢ 4.9‚òÖ –ø–æ –æ—Ç–∑—ã–≤–∞–º'
    },
    sr: {
      nav_services:'Usluge', nav_slots:'Slobodni termini', nav_price:'Cena', nav_faq:'ƒåPP', nav_contact:'Kontakt',
      city:'Novi Sad',
      hero_title:'Pouzdana dadilja u Novom Sadu ‚Äî radite od kuƒáe bez stresa',
      hero_sub:'CPR/Prva pomoƒá, foto-izve≈°taj posle posete, razvojne aktivnosti, motorika po dogovoru.',
      trust_safe:'üõ°Ô∏è Bezbednost', trust_report:'üì∑ Foto-izve≈°taj', trust_no_screens:'üé≤ Razvoj bez ekrana', trust_short_slots:'üïí Termini 2‚Äì4 sata',
      btn_slots:'Proverite slobodne termine',
      hero_micro:'Iskustvo: vaspitaƒç u vrtiƒáu i deƒçiji fitnes trener ‚Ä¢ 4.9‚òÖ po ocenama'
    }
  };
  function applyLang(lang){
    const d=I18N[lang]||I18N.ru;
    document.documentElement.setAttribute('lang', lang==='sr'?'sr':'ru');
    document.querySelectorAll('.i18n').forEach(el=>{
      const k=el.getAttribute('data-key'); if(k && d[k]!=null) el.textContent=d[k];
    });
    document.querySelectorAll('.lang-btn').forEach(b=>{
      const on=b.getAttribute('data-lang')===lang; b.classList.toggle('active',on); b.setAttribute('aria-pressed', on?'true':'false');
    });
    try{ localStorage.setItem('lang', lang);}catch(e){}
  }
  function init(){
    const q=new URLSearchParams(location.search); const qp=(q.get('lang')||'').toLowerCase();
    let stored; try{ stored=localStorage.getItem('lang'); }catch(e){}
    const lang=(qp==='sr'||qp==='ru')?qp:(stored || ((navigator.language||'ru').toLowerCase().indexOf('sr')===0?'sr':'ru'));
    applyLang(lang);
    document.addEventListener('click', e=>{ const btn=e.target.closest && e.target.closest('.lang-btn'); if(!btn) return; e.preventDefault(); applyLang(btn.getAttribute('data-lang')); });
    window.i18nSetLang=applyLang;
  }
  if(document.readyState==='loading') document.addEventListener('DOMContentLoaded', init); else init();
})();

// Availability badge + mock slot
(function(){
  const badge=document.getElementById('availability-badge'); if(!badge) return;
  const CAL_SELECTOR='#slots-calendar'; const SLOT_SELECTOR='.slot--free';
  const pad=n=> (n<10?'0':'')+n;
  const fmt=(h,m)=> pad(h)+':'+pad(m);
  const todayISO=(d)=>{d=d||new Date(); return d.getFullYear()+'-'+pad(d.getMonth()+1)+'-'+pad(d.getDate())};
  const addDaysISO=(iso,add)=>{const p=iso.split('-'); const dt=new Date(+p[0],+p[1]-1,+p[2]); dt.setDate(dt.getDate()+add); return todayISO(dt)};
  const toMin=hhmm=>{const a=String(hhmm).split(':'); return (+a[0])*60+(+a[1]||0)};
  function collectDaySlots(root, iso){
    const nodes=[...root.querySelectorAll(`${SLOT_SELECTOR}[data-date="${iso}"]`)];
    const out=[]; nodes.forEach(el=>{ const f=el.getAttribute('data-from'); const t=el.getAttribute('data-to'); if(!f||!t) return; out.push({fromMin:toMin(f), toMin:toMin(t)}); });
    return out;
  }
  function best(root){
    const now=new Date(), iso=todayISO(now), nowMin=now.getHours()*60+now.getMinutes();
    const today=collectDaySlots(root,iso).filter(s=>s.toMin>nowMin).sort((a,b)=>a.fromMin-b.fromMin);
    if(today.length){ const c=today.filter(s=>s.fromMin>=nowMin)[0]; return {type:'today', slot:c||today[0]}; }
    for(let d=1; d<=6; d++){ const isoN=addDaysISO(iso,d); const arr=collectDaySlots(root,isoN).sort((a,b)=>a.fromMin-b.fromMin); if(arr.length) return {type:(d===1?'tomorrow':'future'), days:d, slot:arr[0], iso:isoN}; }
    return {type:'none'};
  }
  const human=(type,days)=>{ if(type==='today') return '—Å–µ–≥–æ–¥–Ω—è'; if(type==='tomorrow') return '–∑–∞–≤—Ç—Ä–∞'; const dt=new Date(); dt.setDate(dt.getDate()+days); return dt.toLocaleDateString('ru-RU',{day:'2-digit',month:'short'}).replace('.',''); };
  function update(){
    const root=document.querySelector(CAL_SELECTOR); const dot='<span class="dot" aria-hidden="true"></span>';
    if(!root){ badge.className='avail-badge none'; badge.innerHTML=dot+' –ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'; return; }
    const b=best(root);
    if(b.type==='today'){ const f=b.slot.fromMin, t=b.slot.toMin; badge.className='avail-badge ok'; badge.innerHTML=dot+' –°–≤–æ–±–æ–¥–Ω–æ —Å–µ–≥–æ–¥–Ω—è '+fmt(Math.floor(f/60),f%60)+'‚Äì'+fmt(Math.floor(t/60),t%60); return; }
    if(b.type==='tomorrow'||b.type==='future'){ const f2=b.slot.fromMin, t2=b.slot.toMin; badge.className='avail-badge next'; badge.innerHTML=dot+' –ë–ª–∏–∂–∞–π—à–µ–µ: '+human(b.type,b.days)+' '+fmt(Math.floor(f2/60),f2%60)+'‚Äì'+fmt(Math.floor(t2/60),t2%60); return; }
    badge.className='avail-badge none'; badge.innerHTML=dot+' –ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ';
  }
  // Mock one slot today (remove if not needed)
  (function mock(){
    const cal=document.getElementById('slots-calendar'); if(!cal) return;
    const iso=todayISO(new Date());
    if(!cal.querySelector(`[data-date="${iso}"]`)){
      cal.innerHTML = `<div class="slot--free" data-date="${iso}" data-from="16:00" data-to="19:00"></div>`;
    }
  })();
  window.addEventListener('DOMContentLoaded', update);
})();

// Calculator

// Calculator

(function(){
  const EUR_RATE=117, BASE=800, WEEKEND=1.25, TWO=1.25, INFANT=1.5, OPT=300, MIN=2, HOURS_MAX=10;
  const $=id=>document.getElementById(id);
  const money=v=>{ try{return v.toLocaleString('ru-RS')}catch(_){return String(v)} };

  function normalizeHours(commit){
    const h=$('hours'), err=$('hoursErr');
    let v=parseInt(h?.value, 10);
    
    const emptyOrNaN = !Number.isFinite(v) || (h?.value==='');
    if (emptyOrNaN) v = MIN;

    // –¥–∏–∞–ø–∞–∑–æ–Ω 2..10
    v = Math.max(MIN, Math.min(HOURS_MAX, v));

    if (commit && h) { h.value = String(v); }

    // –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∏ —Ç–µ–∫—Å—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ < MIN
    if (h)   { h.classList.toggle('error', v < MIN); }
    if (err) { err.style.display = (v < MIN) ? 'block' : 'none'; }

    return v;
  }

  function hourlyRate(){
    let r=BASE;
    const day=$('dayType')?.value, kids=$('kids')?.value;
    if(day==='weekend') r*=WEEKEND;
    if(kids==='2_infant') r*=INFANT; else if(kids==='2') r*=TWO;
    return Math.round(r/10)*10;
  }

  let last=0;
  const render = (sum) => {
  const eur = $('eurToggle')?.checked;
  let s = `–ò—Ç–æ–≥: ${money(sum)} –¥–∏–Ω`;
  if (eur) {
    const eurVal = Math.round(sum / EUR_RATE);
    s += ` <span class="eur">(‚âà ‚Ç¨${eurVal})</span>`;
  }
  const el = $('result');
  if (el) el.innerHTML = s;
  };
  const animate=(to)=>{
    const from=last; if(from===to){ render(to); return; }
    const start=performance.now(), dur=180, diff=to-from;
    const step=(t)=>{ const p=Math.min(1,(t-start)/dur); render(Math.round(from+diff*p)); if(p<1) requestAnimationFrame(step); else last=to; };
    requestAnimationFrame(step);
  };

  function recalc(commit = true){
    const h = normalizeHours(commit);
    const rate=hourlyRate();
    const add=( $('optA')?.checked?OPT:0 )+( $('optB')?.checked?OPT:0 )+( $('optC')?.checked?OPT:0 );
    const total=rate*h+add; animate(total);

    const br=$('breakdown'); if(br) br.textContent=`–°—Ç–∞–≤–∫–∞: ${rate} –¥–∏–Ω/—á √ó ${h} —á${add?` | –¥–æ–ø. –∑–∞–Ω—è—Ç–∏—è: +${add} –¥–∏–Ω`:''}`;

    const badges=$('badges');
    if(badges){
      const b=[];
      const kids=$('kids')?.value, day=$('dayType')?.value;
      if(kids==='2') b.push('+25% –¥–≤–æ–µ –¥–µ—Ç–µ–π');
      if(kids==='2_infant') b.push('+50% –º–∞–ª—ã—à <2 –ª–µ—Ç');
      if(day==='weekend') b.push('+25% –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å');
      if($('eurToggle')?.checked) b.push('‚Ç¨');
      badges.innerHTML=b.map(t=>`<span class="badge">${t}</span>`).join('');
    }

    const q=new URLSearchParams({
      h:$('hours')?.value||'',
      k:$('kids')?.value||'',
      d:$('dayType')?.value||'',
      a:$('optA')?.checked?1:0,
      b:$('optB')?.checked?1:0,
      c:$('optC')?.checked?1:0,
      eur:$('eurToggle')?.checked?1:0
    });
    try{ history.replaceState(null,'', location.pathname+'?'+q.toString()); }catch(_){}
  }

  function bind(){
  const hoursEl = $('hours');
  if (hoursEl) {
    hoursEl.addEventListener('input', () => {
      normalizeHours(false);  // ‚Üê –ù–ï –∫–æ–º–º–∏—Ç–∏–º –≤–æ –≤—Ä–µ–º—è –Ω–∞–±–æ—Ä–∞
      recalc(false);          // ‚Üê –ø–µ—Ä–µ—Å—á—ë—Ç –±–µ–∑ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –∏–Ω–ø—É—Ç
    });
    ['change','blur'].forEach(ev =>
      hoursEl.addEventListener(ev, () => {
        normalizeHours(true); // ‚Üê –∫–æ–º–º–∏—Ç–∏–º –Ω–∞ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø–æ–ª—è
        recalc(true);
      })
    );
  }

  ['kids','dayType','optA','optB','optC','eurToggle'].forEach(id=>{
    const el=$(id); if(!el) return;
    ['input','change'].forEach(e=> el.addEventListener(e,recalc));
  });

  const setH=n=>{ const h=$('hours'); if(h){ h.value=String(n); h.focus(); recalc(true); }};
  [['p2h',2],['p3h',3],['p4h',4],['p5h',5]].forEach(([id,val])=>{
    const b=$(id); if(b) b.addEventListener('click',()=>setH(val));
  });
  $('pWeekday')?.addEventListener('click', ()=>{ const d=$('dayType'); if(d){ d.value='weekday'; recalc(); }});
  $('pWeekend')?.addEventListener('click',()=>{ const d=$('dayType'); if(d){ d.value='weekend'; recalc(); }});
  $('pKids2')?.addEventListener('click',()=>{ const k=$('kids'); if(k){ k.value='2'; recalc(); }});

    // –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π –±—É–¥—É—â–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    document.addEventListener('click',(ev)=>{
      const chip=ev.target.closest?.('.tag'); if(!chip) return;
      const txt=(chip.textContent||'').toLowerCase();
      if(txt.includes('2 —á')) return setH(2);
      if(txt.includes('3 —á')) return setH(3);
      if(txt.includes('4 —á')) return setH(4);
      if(txt.includes('–≤—ã—Ö–æ–¥–Ω')){ const d=$('dayType'); if(d){ d.value='weekend'; recalc(); } return; }
      if(txt.includes('–¥–≤–∞ —Ä–µ–±—ë–Ω–∫–∞')||txt.includes('–¥–≤–∞ —Ä–µ–±–µ–Ω–∫–∞')){ const k=$('kids'); if(k){ k.value='2'; recalc(); } return; }
    }, true);

    // share
    const share=$('shareLink');
    if(share) share.addEventListener('click', async (e)=>{
      e.preventDefault();
      try{ await navigator.clipboard.writeText(location.href);
           share.classList.add('copied'); setTimeout(()=>share.classList.remove('copied'),1200);
      }catch(_){}
    });
  }

  function fromQuery(){ try{
    const q=new URLSearchParams(location.search);
    if(q.has('h')) $('hours').value=q.get('h');
    if(q.has('k')) $('kids').value=q.get('k');
    if(q.has('d')) $('dayType').value=q.get('d');
    [['a','optA'],['b','optB'],['c','optC'],['eur','eurToggle']].forEach(([k,id])=>{
      if(q.has(k)){ const el=$(id); if(el) el.checked=(q.get(k)==='1'); }
    });
  }catch(_){} }

  if(document.readyState==='loading') document.addEventListener('DOMContentLoaded',()=>{ bind(); fromQuery(); recalc(); });
  else { bind(); fromQuery(); recalc(); }
})();

// ===== FAQ
(function initFAQ() {
  const header = document.querySelector('.site-header');
  const headerOffset = () => (header?.offsetHeight || 0) + 12; // –Ω–µ–±–æ–ª—å—à–æ–π –ª—é—Ñ—Ç

  const items = [...document.querySelectorAll('.faq-item')];
  if (!items.length) return;

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è: –∑–∞–¥–∞—Ç—å max-height –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const setMax = (pane, open) => {
    if (!pane) return;
    if (open) {
      // —Å–Ω–∞—á–∞–ª–∞ —É–±–∏—Ä–∞–µ–º max-height, —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–∑–º–µ—Ä–∏—Ç—å –Ω–æ–≤—É—é –≤—ã—Å–æ—Ç—É
      pane.style.maxHeight = 'none';
      const h = pane.scrollHeight;
      pane.style.maxHeight = h + 'px';
    } else {
      pane.style.maxHeight = '0px';
    }
  };

  items.forEach((li) => {
    const q = li.querySelector('.faq-q');
    const a = li.querySelector('.faq-a');
    const copy = li.querySelector('.faq-q__copy');

    // —Å—Ç–∞—Ä—Ç: –≤—Å—ë –∑–∞–∫—Ä—ã—Ç–æ
    setMax(a, false);

    // –∫–ª–∏–∫ –ø–æ –≤–æ–ø—Ä–æ—Å—É
    q?.addEventListener('click', () => {
      const willOpen = !li.classList.contains('open');

      // (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
      items.forEach((other) => {
        if (other !== li && other.classList.contains('open')) {
          other.classList.remove('open');
          const oa = other.querySelector('.faq-a');
          setMax(oa, false);
        }
      });

      li.classList.toggle('open', willOpen);
      setMax(a, willOpen);

      // –ø–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Ç–∞–∫, —á—Ç–æ–±—ã —à–∞–ø–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –ø–æ–¥ —Ñ–∏–∫—Å-—Ö–µ–¥–µ—Ä–æ–º
      if (willOpen) {
        const y = q.getBoundingClientRect().top + window.scrollY - headerOffset();
        window.scrollTo({ top: y, behavior: 'smooth' });
      }
    });

    // ¬´—Å–∫—Ä–µ–ø–∫–∞¬ª: –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏
    copy?.addEventListener('click', (e) => {
      e.preventDefault();
      const url = location.origin + location.pathname + '#' + q.id;
      navigator.clipboard?.writeText(url);
      copy.classList.add('copied');
      setTimeout(() => copy.classList.remove('copied'), 1500);
    });

    // –Ω–∞ —Ä–µ—Å–∞–π–∑ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–∞–Ω–µ–ª–µ–π
    window.addEventListener('resize', () => {
      if (li.classList.contains('open')) setMax(a, true);
    });
  });

  // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ø–æ —è–∫–æ—Ä—é ‚Äî —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º
  if (location.hash) {
    const q = document.querySelector(location.hash);
    const li = q?.closest('.faq-item');
    const a = li?.querySelector('.faq-a');
    if (li && q && a) {
      li.classList.add('open');
      setMax(a, true);
      const y = q.getBoundingClientRect().top + window.scrollY - headerOffset();
      window.scrollTo({ top: y, behavior: 'instant' in window ? 'instant' : 'auto' });
    }
  }
})();

// Cookie banner + GA4 loader
(function() {
  const LS_KEY='consent_analytics';
  const banner=document.getElementById('cookie-banner');
  const btnAccept=document.getElementById('cookie-accept');
  const btnDecline=document.getElementById('cookie-decline');
  const linkSettings=document.getElementById('cookie-settings');
  const GA_ID=window.__GA_MEASUREMENT_ID__;

  function mountGA(){
    if(!GA_ID || /X{6,}/.test(GA_ID)) return;
    const s=document.createElement('script');
    s.async = true;
    s.src = `https://www.googletagmanager.com/gtag/js?id=${GA_ID}`;
    document.head.appendChild(s);
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    window.gtag = gtag;
    gtag('js', new Date());
    gtag('config', GA_ID, { anonymize_ip: true });
  }

  function consent(state){
    if(typeof gtag==='function'){
      gtag('consent','update', { analytics_storage: state ? 'granted' : 'denied' });
    }
    try{ localStorage.setItem(LS_KEY, state?'granted':'denied'); }catch(e){}
    if(state) mountGA();
  }

  function showBanner(v=true){ banner.hidden = !v; }

  function init(){
    let saved=null; try{ saved=localStorage.getItem(LS_KEY); }catch(e){}
    if(saved==='granted'){ consent(true); }
    else if(saved==='denied'){ consent(false); }
    else { showBanner(true); }
    if(btnAccept) btnAccept.addEventListener('click', ()=>{ consent(true); showBanner(false); });
    if(btnDecline) btnDecline.addEventListener('click', ()=>{ consent(false); showBanner(false); });
    if(linkSettings) linkSettings.addEventListener('click', (e)=>{ e.preventDefault(); showBanner(true); });
  }

  if(document.readyState==='loading') document.addEventListener('DOMContentLoaded', init); else init();
})();

// Footer year

const yEl = document.getElementById('y');
if (yEl) yEl.textContent = new Date().getFullYear();


